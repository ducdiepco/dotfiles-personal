unbind-key C-b
set -g prefix C-s
bind -r C-s send-prefix
set -g base-index 1
set -g renumber-windows on
set -g display-panes-time 350
# improve colors
set -g default-terminal 'screen-256color'
# more intuitive keybindings for splitting
bind-key \\ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Reload tmux.conf with prefix-r
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind -n 'C-h' if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind -n 'C-j' if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind -n 'C-k' if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind -n 'C-l' if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# Simplify status bar display.
set -g status-left-length 40
set -g status-fg black
set -g status-bg green
set -g status-left '[#S] '
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(is-online) #(battery -t -g black)  #(date '+%a, %b %d - %I:%M') "

# Secondary binding for C-l to retain redraw
bind C-l send-keys 'C-l'

# Quick session switching back and forth. I never use the built in layouts
# # (default mapping for Space), so I reclaimed the key for this
bind-key Space switch-client -l

# Make C-j display a selectable list of sessions
# # bind C-j choose-tree
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
